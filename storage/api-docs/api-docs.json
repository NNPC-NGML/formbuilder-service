{
    "openapi": "3.0.0",
    "info": {
        "title": "Formbuilder Service ",
        "version": "0.1"
    },
    "paths": {
        "/api/forms": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get all forms",
                "description": "Retrieves a list of all available forms",
                "operationId": "f3b25f912126359aa20da08d3e875714",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FormResource"
                                            }
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/forms/create": {
            "post": {
                "tags": [
                    "Forms"
                ],
                "summary": "Create a new form",
                "description": "Create a new form builder",
                "operationId": "1d5bcbdf5c69877ab432b408173b3c82",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the form builder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "json_form",
                        "in": "query",
                        "description": "JSON representation of the form",
                        "required": true,
                        "schema": {
                            "type": "json"
                        }
                    },
                    {
                        "name": "process_flow_id",
                        "in": "query",
                        "description": "Process flow ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "process_flow_step_id",
                        "in": "query",
                        "description": "Process flow step ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tag_id",
                        "in": "query",
                        "description": "Tag ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the form builder",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created form builder",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "description": "Name of the form builder",
                                            "type": "string"
                                        },
                                        "json_form": {
                                            "description": "JSON representation of the form",
                                            "type": "string"
                                        },
                                        "process_flow_id": {
                                            "description": "Process flow ID",
                                            "type": "integer"
                                        },
                                        "process_flow_step_id": {
                                            "description": "Process flow step ID",
                                            "type": "integer"
                                        },
                                        "tag_id": {
                                            "description": "Tag ID",
                                            "type": "integer"
                                        },
                                        "status": {
                                            "description": "Status of the form builder",
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "description": "Timestamp of when the form builder was created",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp of when the form builder was last updated",
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/forms/{id}": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Retrieve a form by ID",
                "description": "Returns a single form.",
                "operationId": "getForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    }
                }
            }
        },
        "api/forms/update/{id}": {
            "put": {
                "tags": [
                    "Forms"
                ],
                "summary": "Update a form",
                "description": "Updates the form with the specified ID.",
                "operationId": "updateForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "value1"
                                    },
                                    "tag_id": {
                                        "type": "string",
                                        "example": "value1"
                                    },
                                    "json_form": {
                                        "type": "object",
                                        "example": {
                                            "name": "value"
                                        }
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "process_flow_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "process_flow_step_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Form updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/forms/view/{id}/{entity}/{entity_id}": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "View a specific form with relationships",
                "description": "This endpoint allows a user to view a specific form with its relationships.\n     *                  It checks the access permissions based on the entity and entity_id parameters.",
                "operationId": "viewForm",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "the form unique name",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "Entity type associated with the form",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "path",
                        "description": "Entity ID associated with the form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "task": {
                                            "type": "object",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FormResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Access denied to this form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "you do not have access to this form"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Entity ID mismatch with active user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The entity id does not match with the active user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/form-data/create": {
            "post": {
                "tags": [
                    "Form Data"
                ],
                "summary": "Create or update form data",
                "description": "This endpoint is used to create new form data or update existing data based on the presence of a process flow ID in the form. If the form does not have a process flow ID, the data will be treated as an update, and a data_id is required.",
                "operationId": "storeFormData",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form_builder_id",
                                    "form_field_answers"
                                ],
                                "properties": {
                                    "form_builder_id": {
                                        "description": "ID of the form builder",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "form_field_answers": {
                                        "description": "Array of form field answers",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "field_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "answer": {
                                                    "type": "string",
                                                    "example": "Sample answer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "data_id": {
                                        "description": "ID of the data to update (required if the form does not have a process flow ID)",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data has been saved and dispatched to the proper channel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data has been saved and dispatched to the proper channel."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "data_id is required for this form to be sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "something went wrong, please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/tag": {
            "post": {
                "tags": [
                    "tag"
                ],
                "summary": "get all tags",
                "description": "this endpoint return a json of all tags.",
                "operationId": "617dbbe6ae664f88a1af5fd864ac6691",
                "responses": {
                    "200": {
                        "description": "Data has been saved and dispatched to the proper channel.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "FormDataResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "json_form": {
                        "type": "string"
                    },
                    "process_flow_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FormResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "json_form": {
                        "type": "string"
                    },
                    "process_flow_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TagResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Forms",
            "description": "Forms"
        },
        {
            "name": "Form Data",
            "description": "Form Data"
        },
        {
            "name": "tag",
            "description": "tag"
        }
    ]
}